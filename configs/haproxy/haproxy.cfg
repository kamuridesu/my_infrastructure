global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
 
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private
 
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3
 
defaults
    log    global
    mode    http
    option    httplog
    option    dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

listen  stats
    bind 0.0.0.0:81
    mode            http
    log             global

    maxconn 10

    timeout client      100s
    timeout server      100s
    timeout queue   100s

    stats enable
    stats hide-version
    stats refresh 30s
    stats show-node
    stats show-legends
    stats auth admin:senha
    stats uri  /stats

frontend main_http
    bind *:80
    maxconn 10000
    mode http

    capture request header Host len 200
    option forwardfor

    acl is_argocd hdr_beg(host) -i argocd.kube.local
    acl is_keycloak hdr_beg(host) -i keycloak.kube.local

    use_backend back_argocd_http if is_argocd
    use_backend back_keycloak_http if is_keycloak

backend back_argocd_http
    mode http
    balance leastconn
    http-request set-header Host argocd.kube.local
    server ISTIO $INGRESS_HOST:$INGRESS_PORT check

backend back_keycloak_http
    mode http
    balance leastconn
    http-request set-header Host keycloak.kube.local
    server ISTIO $INGRESS_HOST:$INGRESS_PORT check
